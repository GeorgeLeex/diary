创建时间：	2017/11/30 星期四 下午 8:37

一.Oracle中的函数
1.单行函数:只能处理一行数据
根据处理数据类型不同分类
a)字符函数:对字符串进行处理
    substr(列名, 起始位置, 长度): 字符串截取
    length(列名): 获取字符串字符长度
    lengthb(字符串): 获取字符串的字节数
    instr(列名, 字符串a, 开始位置, 第n次出现):从列对应的数据指定的开始位置开始查找,查找字符串a第n次出现的位置,如果开始位置和n不填则默认为1
    upper(列名): 转大写
    lower(列名): 转小写
    initcap(列名): 首字母大写,其余小写
    replace(列名, 字符串a, 字符串b): 将列名对应的数据中内容为字符串a的替换为字符串b,如果字符串b不填,则会将数据中的为字符串a的内容消除
b)数值函数
    mod(列名, a): 求列中的数据除以a的余数
    round(列, n): 如果n为正数,则保留至小数第n位,并对n+1位进行四舍五入,如果n为负数,则对小数点左边第n位的数进行四舍五入,如果大于等于5,则第n+1位加1,小数点至n位的数都替换为0
    trunc(列, n): 同上,但不进行四舍五入
    ceil(列): 返回一个大于等于该数的最小整数
    floor(列): 返回一个小于等于该数的最大整数
c)日期函数:日期类型的数据可以直接进行算术运算
    sysdate:获取系统当前时间,指的是oracle端的时间,即服务端的时间
    日期格式: dd-mm-yy
                   dd-mm-rr---oracle的默认格式

    months_between(a, b):获取两个日期之间间隔的自然月数,a和b必须是日期类型或者是日期格式的数据,通常大的日期放前面
    add_months(a, m):给日期a添加m个月
    round(a, 'fmt'): fmt表示对日期的哪一个部分进行保留,对其下一个位置进行四舍五入,四舍五入是根据其数据的中间值进行的.year,yyyy表示保留年份,则对月份进行舍入,如果月份大于6则年份加1,month, mm表示对月份保留,对天舍入,天数大于15则月份加1,dd表示天数,对小时进行舍入,小时大于12则天数加1
    extract(fmt from a): 从日期a中获取fmt指定的部分
    last_day(a): 获取日期a当前月的最后一天
    next_day(a, '星期x'): 获取当前日期的下一个星期x的日期
d)转换函数
    to_char(): 把日期或数字转换为字符
    to_date(str, fmt):把字符串按fmt格式转换为日期,如果字符串符合dd-mm-rr的格式则可以省略fmt
    to_numer(): 把字符串转换为数字
    oracle数据库会把字符型的数字自动转化为数字,符合dd-mm-rr或dd-mm-yy格式的字符串转换为日期
    ps:通过连接符 || 可以将任意类型转换为字符串
e)通用函数
    nvl(列, 值): 如果列中的数据为null就使用值替换,否则显示列中的数据,列和值的类型要求必须一致,否则需要对列进行转换
    nvl2(列, a, b): 如果列不为null, 则显示a, 如果为null, 则显示 b
    nullif(a, b): 如果a和b相等便显示null, 否则显示a
    coalesce(表达式1, 表达式2, ....): 返回其中的第一个不为空的参数,参数个数不受限制.但各参数的数据类型必须统一为第一个参数的数据类型
    case...end:可以进行等值判断或范围判断
          then中的内容数据类型必须一致
          ①等值判断: (case 列
                                when 值1 then 结果1
                                when 值2 then 结果2
                                else
                            end)
          ②条件判断: (case
                                when 条件1 then 结果1
                                when 条件2 then 结果2
                                else
                            end)

     decode(字段, 值1, 结果1, 值2, 结果2, 结果3):就是对case-end的等值判断进行简化

二.多表连接
1.等值连接:同一个表中的列与另一个表中某一列的值相等,建立关系
2.非等值连接:一个表中的列与另一个表中的某一列通过不等值建立关系,可以是一个范围
3.连接方法
    a)内连接: 只查询表之间存在关系的数据
    b)外连接: 不仅查询关联的,还查询不关联的
4.笛卡尔积
一个表中每一行和另一个表中的每一行交叉 出现的数据条数，是两个表中数据条数的乘积
出现于当缺少关联条件或关联条件失败
dmbs在执行SQL语句时,总是会先获取多表之间的笛卡尔积后再进行筛选
5.外连接
a)左外连接
就是以等号左边列对应的表为主，全都显示，右边没有对应的数据 以null显示,标记 就是在 等号 的右边 添加 (+)
b)右外连接：就是以等号右边列对应的表为主，全都显示，左边没有对应的数据 以null显示,标记 就是在 等号 的左边 添加 (+)
c)全外连接:通过集合运算符把左外连接和右外连接的结果进行拼接
union: 去除重复内容后进行合并之后按第一列的值进行升序排列显示
union all:直接合并, 不会处理重复数据
使用union或union all进行合并的结果集列数必须一致,对应列的类型也必须一致
6.自连接:一张表中通过列和主键关联,实现上下级关系的建立,给同一张表起别名的方式把一张表虚拟为多张表使用