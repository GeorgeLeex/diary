创建时间：	2017/11/24 星期五 上午 9:29

1.Set与Map之间的关系
    Set集合其实是使用Map集合的key来存放数据
    Map中的数据需要转换成Set集合才可以遍历:keySet和entrySet

2.HashMap和TreeMap的区别
    ①HashMap是按照Hash算法来存储数据,TreeMap以Tree结构存放数据,按照key来排序
    ②HashMap的效率比TreeMap要高
    ③HashMap可以自行设置初始容量与加载因子来进行优化,TreeMap不能自行设置

3.HashMap和HashTable的区别
    ①HashMap是jdk1.2后添加的,HashTable是一个旧的存放格式
    ②HashMap线程不安全,HashTable线程安全
    ③HashMap的效率比HashTable高
    ④HashMap的key值可以是null且只能有一个,HashTable的key不能为null

4.final,finally,finalize的区别
    final:一个修饰符,表示终态的
    finally:java中异常处理的关键字,表示都会执行的代码部分
    finalize:析构函数,在java垃圾回收时,自动调用,用于释放资源

5.java 7新特性
①数值常量对下划线支持:常量值中可以使用 _ 进行分割,但是不能在数字的开头,结尾以及小数部分的开头使用
②可以声明二进制形式的常量,但必须以0b为前缀
③switch的表达式可以使用String类型
④catch表达式的调整:一个catch()中可以捕获多种异常,但异常不能是父子关系
⑤自动资源管理:try后可以添加一个括号()并在里面添加表示自动关闭的资源.
⑥"<>"类型推断运算符:自动识别的泛型,创建集合对象时,左边使用了泛型,则new的一边可以只使用<>而不用填泛型
⑦nio2
⑧G1垃圾回收器:Garbage First的缩写,G1回收器优先回收垃圾最多的区域,它把堆分成了多个区域,G1回收器是一个可预测的回收器,同时对那些内存密集型的程序仍能保持较高的吞吐量

6.java语言可以跨平台的原因
java语言是半编译半解析的,java源文件被编译为字节码文件,字节码文件可以在不同平台的jvm中被解析运行

7.进程和线程
进程:指的是一个程序,有独立的代码和内存空间
线程:指的是进程中的一个任务
①进程和线程的关系:
a)一个进程至少有一个或多个线程,而线程属于进程的一部分
b)进程之间无法共享数据,而线程之间共享内存和数据
c)进程切换耗费的资源较大,而线程切换开销较少

多线程的实现:
a)创建线程类,
继承Thread类,该子类应重新Thread类的run方法
实现Runnable接口,并实现run方法
当一个线程启动后.会自动调用run方法
b)通过线程类的构造方法来创建线程对象
通过Thread类的无参构造方法创建,适用于继承自Thread类的子类
通过Thread类的带参构造方法创建,传入Runnable对象,即为实现了Runnable接口的类
c)运行线程
调用线程对象start方法运行线程,不过由于start方法是Thread类中的方法,所以实现Runnable接口的类的对象无法使用该方法,这时需要调用Thread类的带参构造方法传入一个线程对象调用start方法

②线程的生命周期
a)只有一个线程或者别人争不过你
new-->start-->就绪-->CPU调度-->执行run方法-->执行完所有内容-->结束
b)当前线程在执行过程中,使用sleep()方法或join()方法以及其它阻塞操作
new-->start-->就绪-->CPU调度-->执行过程中执行sleep()或join()-->当前线程进入就绪状态-->等待CPU调度
c)当前线程执行过程中,执行了yield方法
new-->start-->就绪-->CPU调度-->执行过程中执行yield()-->直接进入就绪状态
d)当前线程执行过程中,执行了wait方法
new-->start-->就绪-->CPU调度-->执行过程中执行wait()-->只有在其他线程执行notify()或notifyAll()时,该线程才会进入就绪状态
e)当前线程执行过程中,调用的方法是同步方法,且正在被其他线程使用,则当前线程进入就绪状态

③常用方法
a) sleep(long time):休眠多少秒,时间一到便自动进入就绪状态
b) join(): 把另一个线程加入,当前线程等待别人执行完毕
c) yield(): 暂时让出,执行那个线程依然由CPU决定
d) wait(): 让当前线程进入等待状态,如果没有其他线程使用notify()或notifyAll()就会一直等待下去
e)start(): 使线程处于可以运行的状态,即就绪,但并不一定意味着该线程立刻开始运行,线程的运行取决于CPU的调度

线程的优先级
a)java提供一个线程调度器来监控程序中启动后进入就绪状态的所有线程,线程调度器按照线程的优先级来决定应该调度哪个线程来执行
b)java线程的优先级用1~10表示,数值越小表示优先级越低
c)java的优先级是高度依赖于操作系统的实现的
d)Thread类有三个常量,表示常用线程的优先级
Thread.MIN_PRIORITY 1
Thread.NORM_PRIORITY 5
Thread.MAX_PRIORITY 10
缺省是默认为NORM_PRIORITY,即为5
getPriority():获取线程的优先级
setPriority():设置线程的优先级

④synchronized; 表示同步的,修饰的内容只能够被一个线程使用,可以避免线程的并发操作,但效率低