创建时间：	2017/12/4 星期一 上午 10:38

一.DDL
1.①添加列
alter table 表名 add(列名, 数据类型)
②删除列
alter table 表名 drop column 列名
2.插入多行数据
①insert into 表名 (select * from 表名 where 条件)
将从一张表中查询得到的数据插入到指定表中,要求查询得到的数据类型的个数与顺序与指定表的相同,可以用于数据备份
常用于数据删除操作,比如回收站
②创建表时插入多行数据
create table 表名 as (select * from 表名 where 条件)
将一张表中的符合条件的数据存入到一张新表中
特殊用法:
create table 表名 as (select * from 表名 where 1 = 0)
创建一张新表,该表与其查询出来的表数据结构一致,但没有任何约束,用于数据表结构备份
相关子查询,在子查询中使用主查询中的内容作为条件进行查询,但不适用于使用在from中的子查询
2.事务(Transaction)
是数据库中最小的组织单元,由一条或者多条sql语句组成,要么全成功要么都失败
①事务的特性(ACID)
a)原子性(Atomicity):指事务像原子一样不可拆分,要么全成功,要么全失败,不可能出现部分成果部分失败的情况
b)一致性(Consistency):事务完成后不管成功还是失败,其整个系统处于数据一致的状态
c)隔离性(Isolation):事务之间互相独立,一个事务的执行不会被另一个事务所干扰
d)持久性(Durability):也称为永久性,指事务一旦提交,对数据的改变就是永久的,不可再被回滚
3.事务结束
①显示结束
提交(commit):使用commit命令实现,以成功的方式结束事务,组成事务的所有DML语句操作全部生效
回滚(rollback):使用rollback命令实现,以失败的方式结束事务,组成事务的所有DML语句操作全部被取消
②隐式结束
隐式提交:当执行一个DDL语句(create, alter, drop, truncate, rename), DCL语句(grant, revoke),或者从SQL*Plus正常退出时(即使用exit或者quit命令退出时)会发生隐式提交
隐式回滚:当 从 SQL*Plus中强行退出, 客户端连接到服务器端异常中断, 系统崩溃时会发生隐式回滚
4.事务开启:事务自动开启于上一个事务结束后遇到执行的第一个DML语句
5.保存点;用于在一个事务中回滚到指定位置
①savepoint 保存点名: 定义一个保存点
②rollback to 保存点名: 回滚到指定保存点
这两条语句不会结束事务的执行,回滚到保存点会取消保存点之后的操作
6.锁
保证表中的数据不被多个dml语句同时操作,保证数据一致性的一种机制
①DML语句会对自己影响的行 添加锁
②DQL语句本身不会加锁, 但可以通过在 SQL语句末尾添加 for update使其被查询的数据 添加锁
③锁只有在事务结束后才会被释放
7.提交或回滚前数据状态
①数据处于变化前的状态则可以被恢复
②当前会话可以使用select语句来验证DML操作后的结果
③其它的会话不能查看由当前用户的DML操作结果
④受影响的记录被锁定,其它用户不能改变受影响记录中的数据
8.提交后的数据状态
①在数据库中变为永久性的,先前的数据状态永久性的消失
②所有的用户或者会话都可以查询到提交后的结果
③锁定的记录被释放,可以被其它用户操作
④所有的保存点被清楚
9.回滚后数据状态
①先前的数据状态被恢复
②锁定的记录被释放
③所有保存点被清楚
