创建时间：	2018/1/2 星期二 下午 9:35

一.闭包---能够读取其它函数内部局部变量的函数
1.当一个函数里的局部变量是在返回值为函数类型的函数里返回时,将该函数的返回值赋值给一个变量,每次调用改变量都能获取到其原函数里的局部变量,这个局部变量始终都没有被释放
2.注意点
a)闭包会使得函数的变量都被保存在内存中,可能会造成内存泄漏
b)闭包可能会在父函数的外部改变父函数内部变量的值
二.作用域
1.js中没有块级作用域,所以在for循环或while循环等小括号中声明的值在其外部依然可以访问,跟定义了一个全局变量一样
三.执行上下文(Execution Context)---EC
1.类似于一个栈级的结构
2.变量对象(Variable Object---VO)
a)抽象概念的对象,用于存储EC中的变量, 函数声明, 函数参数
3.变量初始化阶段
VO对象按照如下顺序填充数据:
a)函数参数(传参时如果未传入,那么初始化该参数的值为undefined)
b)函数声明:如果函数的命名与其它的命名发生冲突,那么后面的会覆盖前面的
c)变量声明:变量的初始化会被提前,变量声明时其初始化变量值为undefined,如果变量的命名与前面的命名发生冲突,那么会忽略掉该变量
d)函数表达式不会影响VO, 比如变量赋值符号右边的表达式并不会影响或记录到VO对象
3.函数中的激活对象AO
a)类似于执行函数时的一个arguments对象
b)对于函数对象来说, VO和AO是同一个对象
http://www.cnblogs.com/wangfupeng1988/p/3991995.html