创建时间：	2017/12/31 星期日 下午 2:56

一.数组
1.稀疏数组: 稀疏数组不含有从0开始的连续索引,通常出现在new Array(长度)构造的数组下,虽然即使从没有赋值过的索引上能够取得undefined值,但实际上该数组并没有这个索引,它的索引并不是从0开始连续的,它的索引的存在取决于该索引上是否有值,稀疏数组一般length属性比实际的元素个数要大
2.数组方法
Array.prototype原型链上的方法
a)join():将数组的所有元素拼接成字符串,使用其指定的字符串进行分隔,默认为逗号
b)reverse():将该数组逆序,会修改原数组
c)sort()
①默认是按照字母进行排序,会将其它数据类型临时转换为字符串排序,会修改原数组
②sort函数比较数字并不准确,可以给该函数传入一个函数作为参数,该函数有两个参数比如a,b.返回a-b则从小到大排列,返回b-a则从大到小排列
d)concat():合并数组,不会修改原数组,传入的参数为要合并的元素,如果某个参数为数组,则会合并数组里的每个元素,如果依然嵌套着数组,则只合并整个数组
e)slice():根据索引返回部分数组,负数的索引表示从右至左算,原数组不会被修改
f)splice():数组拼接,传递一个参数表示去掉从该索引开始的所有元素,两个参数表示去掉从参数1开始的"参数2"个元素;如果其后还有参数,则表示去掉元素之后在指定索引上要进行拼接的元素 ,原数组会被修改
g)forEach():传入一个函数参数:function(item, index, arr){方法体} 该函数参数的item参数代表着数组的每一个元素,index为索引,arr为正在遍历的数组,后两个参数可以不写
h)map():数组映射, 传入一个函数参数, 函数参数的参数代表着数组的每一个元素,原数组不会被修改
i)filter():数组过滤,传入的函数参数的 参数1代表着数组的每个元素,参数2代表索引,可以只返回符合要求的元素过滤掉不符合要求的元素,原数组不会被修改
j) every()和some():传入一个函数参数,其参数代表数组的每一个元素,every()表示每一个元素是否都满足一定条件,some()表示只要有一个元素满足条件便返回true;
k)reduce()和reduceRight(): 传入的函数参数的两个参数代表着每次两两操作的数组元素,函数返回的值作为下一次的两两操作的第一个值,可以用于寻找数组中的最大数:arr.reduce(funciton (x, y) { return x > y ? x : y; });
reduceRight()不同的是从右边开始遍历, 这两个函数都不会改变原数组
ps: Array.isArray():可以判断传入的参数是否为数组