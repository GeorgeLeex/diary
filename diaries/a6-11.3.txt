创建时间：	2017/11/3 星期五 下午 6:50

一.冒泡排序
排序思想:从数组第一个元素开始,相邻两元素进行比较,按升序或降序的排序需求来,一般为升序,如果前一个元素大于后一个元素,则对其进行位置互换,如此依次比较,就可以将数组中的最大数至于数组尾端了,然后开始第二次大循环,依然从第一个元素开始进行比较,不过不用再和最后一个元素进行比较了,然后进行一轮轮比较后数组中除了上一轮比较出来的最大元素外中的最大元素也至于数组尾端了
for (int i = 1; i<array.length; i++) {
    for (int j =0; j < array.length - i; j++) {
        if (array[j] > array[j+1]) {
            int temp = array[j+1];
            array[j+1] = array[j];
            array[j] = temp;
        }
    }
}

二.二维数组---包含一维数组的一维数组
    1.动态初始化:
    ①数组类型[][] 数组名 = new 数据元素类型[行数][列数]
    ②数组类型[][] 数组名 = new 数据元素类型[行数][],该二维数组中的每个元素---一维数组的值都是默认初始化值null,所以必须给每一行进行初始化后才能使用, 没有行数的动态初始化是非法的
    2.静态初始化:
        数组类型[][] 数组名 = new 数组元素类型[][]{{元素..},{元素..},{元素..}}
        特殊写法情况:int[] x,y[]; x是一维数组,y是二维数组.  

三.操作数组的工具类---Arrays
    1.equals:比较两个数组是否相等,只有当两个数组拥有相同元素个数,且所有对应元素两两相等时才为true,适用于一维数组,比较二维数组为false,比较二维数组用deepEquals方法.
    2.fill(指定数组,指定元素):  填充,对指定数组进行填充,如果数组中存在元素,则会被替换为指定元素,填充后数组中都是指定元素.  
    3.sort(数组):用来对数组进行升序排序.还可以使用sort(数组,开始索引,截止索引)来对数组中的一部分元素进行排序.从开始索引开始,截止到截止索引之前.
    4.binarySearch():---二分查找法/折半查找法,查询思路为对有序数组折半分为左区和右区,根据其值是否小于左区的右边界或大于右区的左边界来判断处于哪个区间,反复查询.
对已经排好序-升序的数组寻找元素,返回其索引,如果没有则返回-1
    5.arraycopy(原数组,起始索引,目标数组,目标数组中的起始索引,复制元素的个数).从源数组中的指定索引开始复制指定长度个数的元素到目标数组,从指定索引开始存储,会进行替换.

四.二分法

