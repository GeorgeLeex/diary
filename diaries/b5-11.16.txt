创建时间：	2017/11/16 星期四 上午 10:32

一.接口
    在面向对象设计的时候，发现某些类 具有相同的行为，但是不具备 is a 的关系
    java 提供了 接口 在弥补 单一继承的不足，同样可以实现多态
1.什么是接口 就是 一些常量和抽象方法的集合
2.接口的特点:
接口中的变量 在编译时 自动转换为 常量 ，必须在声明时 赋值
接口中的方法 都是 public 修饰的抽象方法，如果不写，默认添加
在jdk 1.8 后 接口中可以定义 普通default修饰的方法
3.接口,类的继承
a)类只能继承一个类,但可以实现多个接口
b)接口可以继承多个接口,不过接口不能继承类
4.接口和普通类的区别
a)接口中只有常量和抽象方法,没有构造方法,不能构建对象,必须通过实现类构建
b)类中有常量,也可以有变量,非抽象方法.有构造方法,可以创建对象
c)类可以实现一个或多个接口,但是接口不能继承类
5.接口和抽象类的异同点
相同:
    a)都不能直接创建对象,都必须通过子类或实现类构建对象
    b)都可以包含抽象方法和常量
不同:
    a)抽象类可以包含抽象方法和非抽象方法,接口只能有抽象方法
    b)抽象类必须有构造方法,接口不能有抽象方法
    c)抽象类可以有常量和变量,接口只有常量
    d)抽象类中访问修饰符可以有很多,接口只有public
    e)抽象类可以实现接口
1.简单保留两位小数:Math.round(): 该方法会将传入的double型或float型的变量四舍五入取整,取整数后一位
使用Math.round(浮点型变量 * 100) / 100.0 即可简单保留两位小数
2.引用数据类型的转换
    ①上溯造型,:向上转型(Upcasting)---子类转换为父类,自动转换
    前提:具有继承或实现关系
    ps:向上转换会损失子类中新扩展的属性和方法,仅可以使用从父类中继承的属性和方法,类似于退化
    ②下溯造型:向下转型(Downcasting)---将父类对象显示的转换为子类类型,强制转换
    只有曾经向上转换过的对象,才能再向下转换,对象不允许不经过上溯造型而直接下溯造型
3.多态(动态绑定)
    ①不同的对象对同一行为作出不同的反应
    ②多态存在的三个必要条件
        有继承,或者实现
        有重写
        父类的引用指向子类对象 
     当满足多态的条件时,当调用父类中被重写的方法后,运行时创建的是哪个子类对象,就调用那个子类对象中的该方法
    在执行期间才判断引用对象的实际类型,称为动态绑定,根据其实际类型执行相应的方法
4.内部类
    ①普通类的访问权限修饰符只能是public和default两种
        而内部类的可以有四种